class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // 腾空1位
        ListNode node = new ListNode(0);
        ListNode p = l1, q = l2, cur = node;
        int carry = 0;
        while (true) {
            // p/q可能为空
            int t = (p == null ? 0 : p.val) + (q == null ? 0 : q.val) + carry;
            cur.val = t % 10;
            carry = t / 10;

            // 如果p.next/q.next均为空,且carry==0 则break
            if ((p == null || p.next == null) && (q == null || q.next == null) && carry == 0) {
                break;
            }
            p = p!=null?p.next:null;
            q = q!=null?q.next:null;
            cur.next = new ListNode(0);
            cur = cur.next;
        }

        return node;
    }
}
// @lc code=end

//runtime:2 ms
//memory:41.3 MB
